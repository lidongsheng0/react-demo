{"version":3,"sources":["events.js","ComponentA.js","ComponentB.js","api/shop.js","reducers/cart.js","actionTypes/index.js","reducers/products.js","reducers/index.js","containers/CartContainer/index.js","actionCreators/index.js","containers/BooksContainer/index.js","containers/debouceDemo.js","App.js","serviceWorker.js","index.js"],"names":["EventEmitter","A","useState","data","setData","useEffect","emitter","addListener","B","onClick","emit","cb","timeout","setTimeout","_products","payload","initialState","addedIds","quantityById","state","action","type","indexOf","productId","cart","products","inventory","combineReducers","byId","reduce","obj","product","id","visibleIds","map","getProduct","getVisibleProducts","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","price","toFixed","getCartProducts","quantity","connect","checkout","dispatch","getState","shop","hasProducts","length","key","title","disabled","addToCart","addToCartAction","DebouceDemo","ajax","content","console","log","fun","delay","debounceAjax","args","clearTimeout","call","this","throttleAjax","last","deferTimer","now","Date","throttle","onChange","e","target","value","Topics","match","useRouteMatch","to","url","path","Topic","topicId","useParams","App","Boolean","window","location","hostname","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","getProductsActions","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.186b3bea.chunk.js","sourcesContent":["import { EventEmitter } from \"events\";\r\nexport default new EventEmitter()","import React,  { useEffect, useState }  from 'react'\r\nimport emitter from './events'\r\n\r\nfunction A() {\r\n    const [data, setData] = useState()\r\n    useEffect(() => {\r\n        emitter.addListener(\"call me\", (data)=>(\r\n            setData(data)\r\n        ))\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            hello, {data}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default A","import React from 'react'\r\nimport emitter from './events'\r\nfunction B() {\r\n    const cb =(data) => {\r\n        emitter.emit(\"call me\", data)\r\n    }\r\n    return(\r\n        <div>\r\n           <button onClick= { () => cb(\"hey\") }></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default B","import _products from './products.json'\r\n\r\nconst TIMEOUT = 100\r\n\r\nexport default {\r\n    getProducts: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT),\r\n    buyProducts: (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\r\n}","import { ADD_TO_CART, CHECKOUT_REQUEST, CHECKOUT_FAILED } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  addedIds: [],\r\n  quantityById: [],\r\n};\r\n\r\nconst addedIds = (state = initialState.addedIds, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.indexOf(action.productId) !== -1) return state;\r\n      return [...state, action.productId];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst quantityById = (state = initialState.quantityById, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const { productId } = action;\r\n      return { ...state, [productId]: state[[productId] || 0] + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getQuantity = (state, productId) =>\r\n  state.quantityById[productId] || 0;\r\n\r\nexport const getAddedIds = (state) => state.addedIds;\r\n\r\n/**\r\n *\r\n *\r\n *  checkout the cart */\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHECKOUT_REQUEST:\r\n      return initialState;\r\n    case CHECKOUT_FAILED:\r\n      return action.cart;\r\n    default:\r\n      return {\r\n        addedIds: addedIds(state.addedIds, action),\r\n        quantityById: quantityById(state.quantityById, action),\r\n      };\r\n  }\r\n};\r\nexport default cart;\r\n","export const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const CHECKOUT_FAILED = 'CHECKOUT_FAILED'\r\nexport const CHECKOUT_SUCCEED = 'CHECKOUT_SUCCEED'\r\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'","import { combineReducers } from 'redux'\r\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../actionTypes'\r\n\r\n/**\r\n * products n *\r\n */\r\nconst products = ( state, action ) => {\r\n    switch ( action.type ) {\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                inventory: state.inventory - 1\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst byId = ( state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                ...action.products.reduce((obj, product) => {\r\n                    obj[product.id] = product\r\n                    return obj\r\n                }, {}) // \r\n            }\r\n        default: \r\n        const { productId } = action\r\n        if (productId) {\r\n            return {\r\n                ...state,\r\n                [productId]: products(state[productId], action)\r\n            }\r\n        }\r\n        return state\r\n    }\r\n}\r\n\r\nconst visibleIds = (state = [], action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_PRODUCTS:\r\n            return action.products.map(product => product.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n \r\n export default combineReducers({\r\n     byId,\r\n     visibleIds\r\n })\r\n\r\n\r\n export const getProduct = (state, id) => state.byId[id]\r\n export const getVisibleProducts = state => state.visibleIds.map(id => getProduct(state, id))","// combineReducers\r\nimport { combineReducers } from 'redux'\r\nimport cart, * as fromCart from './cart'\r\nimport products, * as fromProducts from './products'\r\n\r\n/**\r\n * \r\n * cart and products\r\n */\r\nexport default combineReducers({\r\n    cart, \r\n    products\r\n})\r\n\r\n/**\r\n *  how much in total\r\n */\r\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\r\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\r\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\r\nexport const getTotal = state => \r\n    getAddedIds(state)\r\n    .reduce((total, id) =>\r\n    total + getProduct(state, id).price * getQuantity(state, id),\r\n    0\r\n    )\r\n    .toFixed(2)\r\n\r\n/**\r\n * get products list\r\n*/\r\nexport const getCartProducts = state => \r\n    getAddedIds(state).map(id => ({\r\n        ...getProduct(state, id),\r\n        quantity: getQuantity(state, id)\r\n    }))","/**\r\n * a cart with map of products and a button to add up\r\n */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { checkout } from '../../actionCreators'\r\nimport { getTotal, getCartProducts } from '../../reducers'\r\n\r\nconst CartContainer = ({ products, total, checkout }) => {\r\n    const hasProducts = products.length > 0;\r\n    return (\r\n        <div>\r\n            <h3>Welcome to your shopping cart!</h3>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        products.map(product => \r\n                            <div key={product.id}> {product.title} --> ${ product.price }\r\n                            {product.quantity ? `* ${product.quantity}` : null}\r\n\r\n                            </div>)\r\n                    }\r\n                </div>\r\n                <p>Total price is {total}</p>\r\n            </div>\r\n            <button\r\n                onClick={() => checkout(products)}\r\n                disabled={hasProducts ? '' : 'disabled'}\r\n            >\r\n                Check out!\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n    products: getCartProducts(state),\r\n    total: getTotal(state)\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { checkout }\r\n)(CartContainer)","import shop from '../api/shop'\r\nimport * as types from '../actionTypes'\r\n\r\n/**\r\n * \r\n * @param {get the books} products \r\n */\r\nconst getProductsActions = products => ({\r\n    type: types.RECEIVE_PRODUCTS,\r\n    products\r\n})\r\n\r\nexport const getAllProducts = () => dispatch => {\r\n    shop.getProducts(products => {\r\n        dispatch(getProductsActions(products))\r\n    })\r\n}\r\n\r\n/**\r\n * action: addtocart\r\n * @param productid\r\n */\r\n\r\n const addToCartAction = productId =>({\r\n     type: types.ADD_TO_CART,\r\n     productId\r\n })\r\n\r\n export const addToCart = productId => (dispatch, getState) => {\r\n     if ( getState().products.byId[productId].inventory > 0) {\r\n         dispatch(addToCartAction(productId))\r\n     }\r\n }\r\n\r\n /**\r\n  * \r\n  * \r\n  * check out!\r\n  */\r\n\r\nexport const checkout = products => (dispatch, getState) => {\r\n    const { cart } = getState()\r\n    dispatch({\r\n        type: types.CHECKOUT_REQUEST\r\n    })\r\n    shop.buyProducts(products, () => {\r\n        dispatch({\r\n            type: types.CHECKOUT_SUCCEED,\r\n            cart\r\n        })\r\n    })\r\n    // CHECKOUT_FAILED\r\n}\r\n// 3 steps to create a action: define type, payload, actionCreator\r\n// then reducer\r\n// then shop","import React from \"react\";\r\nimport { getVisibleProducts } from \"../../reducers/products\";\r\nimport { addToCart } from \"../../actionCreators\"\r\nimport { connect } from 'react-redux'\r\nconst BooksContainer = ({ products, addToCart }) => (\r\n  <div>\r\n    <h2>BOOOOOKISH</h2>\r\n    {products.map((product) => (\r\n      <div>\r\n        {product.title} : ${product.price}\r\n        Inventory:{product.inventory ? product.inventory : null}\r\n        <button\r\n          onClick={() => addToCart(product.id)}\r\n          disabled={product.inventory > 0 ? \"\" : \"disabled\"}\r\n        >\r\n          {product.inventory > 0 ? \"add to cart\" : \"sold out\"}\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: getVisibleProducts(state.products),\r\n});\r\nexport default connect(mapStateToProps, { addToCart })(BooksContainer);\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function DebouceDemo() {\r\n  function ajax(content) {\r\n    console.log(\"ajax request:\" + content);\r\n  }\r\n\r\n  let debounceAjax = debounce(ajax, 500);\r\n\r\n  function debounce(fun, delay) {\r\n    return function (args) {\r\n      clearTimeout(fun.id);\r\n      fun.id = setTimeout(function () {\r\n        fun.call(this, args);\r\n      }, delay);\r\n    };\r\n  }\r\n\r\n  let test1 = () => console.log(\"test throttle\");\r\n  //   , new Date().Format('HH:mm:ss'));\r\n  let test2 = () => console.log(\"test debounce\");\r\n  //   , new Date().Format('HH:mm:ss'));\r\n  //   setInterval(throttle(test1, 1000), 100);\r\n\r\n  useEffect(() => {\r\n    // setInterval(throttle(test1, 1000), 100)\r\n    // setInterval(debounce(test2, 2000), 100)\r\n  }, []);\r\n\r\n  let throttleAjax = throttle(ajax, 500);\r\n\r\n  function throttle(fun, delay) {\r\n    let last, deferTimer;\r\n    return function (args) {\r\n      let now = +new Date();\r\n      if (last && now < last + delay) {\r\n        clearTimeout(deferTimer);\r\n        deferTimer = setTimeout(function () {\r\n          last = now;\r\n          fun.call(this, args);\r\n        }, delay);\r\n      } else {\r\n        last = now;\r\n        fun.call(this, args);\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input onChange={(e) => ajax(e.target.value)} />\r\n        {\" vanilla input\"}\r\n      </div>\r\n      <div>\r\n        <input onChange={(e) => debounceAjax(e.target.value)} />\r\n        {\" input with debounce \"}\r\n      </div>\r\n\r\n      <div>\r\n        <input onChange={(e) => throttleAjax(e.target.value)} />\r\n        {\" input with throttle\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport A from \"./ComponentA\";\r\nimport B from \"./ComponentB\";\r\nimport \"./App.css\";\r\nimport CartContainer from \"./containers/CartContainer\";\r\nimport BooksContaisner from \"./containers/BooksContainer\";\r\nimport DebouceDemo from \"./containers/debouceDemo\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/eventsDemo\">eventsDemo</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/cart\">Cart</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/topics\">Topics</Link>\r\n            </li>\r\n            <Link to=\"/debouce\"> DebouceDemo</Link>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/debouce\">\r\n            <DebouceDemo />\r\n          </Route>\r\n          <Route path=\"/cart\">\r\n            <CartContainer />\r\n          </Route>\r\n          <Route path=\"/eventsDemo\">\r\n            <A />\r\n            <B />\r\n          </Route>\r\n          <Route path=\"/users\"></Route>\r\n          <Route path=\"/topics\">\r\n            <Topics />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <BooksContaisner />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Topics() {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Topics</h2>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/components`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Topics page has its own <Switch> with more routes\r\n          that build on the /topics URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all topics, or\r\n          the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}\r\n\r\nexport default App;\r\n//TODO\r\n//ROUting\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport thunk from 'redux-thunk'\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createLogger } from 'redux-logger'\r\nimport reducer from './reducers'\r\nimport { getAllProducts } from './actionCreators'\r\nconst middleware = [thunk]\r\n\r\nif(process.env.NODE_ENV !== \"production\") {\r\n  middleware.push(createLogger())\r\n}\r\nconst store = createStore(reducer, composeWithDevTools(\r\n  applyMiddleware(...middleware),\r\n))\r\n\r\nstore.dispatch(getAllProducts())\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}